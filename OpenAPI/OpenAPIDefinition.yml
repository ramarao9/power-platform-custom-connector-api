swagger: "2.0"
info:
  description: "This is a simple API to create Appointments for the customers."
  version: "1.0.0"
  title: "Customer Appointments"
  contact:
    url: "https://github.com/ramarao9"
    name: Contact Developer
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "*.azurewebsites.net"
basePath: "/v2"
tags:
- name: "Appointment"
  description: "Appointments for the customer"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"

schemes:
- "https"
paths:
  /Appointment:
    post:
      tags:
      - "Appointment"
      summary: "Add a new appointment for customer"
      description: ""
      operationId: "addAppointment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Appointment object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Appointment"
      responses:
        "400":
          description: Invalid input
        "500":
          description: "Internal server error"
        "201":
          description: "Appointment created"
      security:
      - appointment_auth:
        - "write:appointments"
        - "read:appointments"
    put:
      tags:
      - "Appointment"
      summary: "Update an existing appointment"
      description: ""
      operationId: "updateAppointment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Appointment that needs to be created for the customer"
        required: true
        schema:
          $ref: "#/definitions/Appointment"
      responses:
        "204":
          description: "No content"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Appointment not found"
        "500":
          description: "Internal server error"
      security:
      - appointment_auth:
        - "write:appointments"
        - "read:appointments"


  /Appointment/{customerId}/{appointmentId}:
    get:
      tags:
      - "appointment"
      summary: "Find Appointment by Customer ID and Appointment ID"
      description: "Returns a single appointment"
      operationId: "getAppointmentById"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of the customer"
        required: true
        type: "string"
        format: "uuid"
      - name: "appointmentId"
        in: "path"
        description: "ID of the appointment"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Appointment"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Appointment not found"
        "500":
          description: "Internal server error"
      security:
      - appointment_auth:
        - "write:appointments"
        - "read:appointments"

    delete:
      tags:
      - "appointment"
      summary: "Deletes an appointment"
      description: ""
      operationId: "deleteAppointment"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of the customer"
        required: true
        type: "string"
        format: "uuid"
      - name: "appointmentId"
        in: "path"
        description: "ID of the appointment"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Appointment not found"
        "500":
          description: "Internal server error"
      security:
      - appointment_auth:
        - "write:appointments"
        - "read:appointments"
securityDefinitions:
  appointment_auth:
    type: "oauth2"
    tokenUrl: "https://login.microsoftonline.com/common/v2.0/oauth2/token"
    flow: "application"
    scopes:
      write:appointments: "Modify appointments"
      read:appointments: "Read your appointment"

definitions:

  Appointment:
    type: "object"
    required:
    - "CustomerId"
    - "Id"
    properties:

      CustomerId:
        type: "string"
        format: "uuid"

      Id:
        type: "string"
        format: "uuid"

      StartTime:
        type: "string"
        format: "date-time"

      EndTime:
        type: "string"
        format: "date-time"

      Description:
        type: "string"

      Location:
        type: "string"

      Subject:
        type: "string"    

